*fontcatalog.txt*            Font Catalog Plugin                  2023 March 14
*fontcatalog.vim*                                                *fontcatalog*

Author: Alessandro Antonello <antonello.ale@gmail.com>

License:    This plugin is under GPLv3 license.  This basically means that you
            are free  to copy,  share,  distribute,  sell or change  it as you
            like. There are no warranties though.

==============================================================================
                                                           *fontcatalog-index*
1. Contents                                             *fontcatalog-contents*

        1. Contents.................................: |fontcatalog-contents|
        2. What is this plugin for?.................: |fontcatalog-whatis|
        3. Installing...............................: |fontcatalog-install|
        4. Categories...............................: |fontcatalog-categories|
        5. Options..................................: |fontcatalog-options|
        6. Commands.................................: |fontcatalog-commands|
            :Font                                   : |:Font|
            :Font add                               : |:Font-add|
            :Font rm                                : |:Font-rm|
            :Font set                               : |:Font-set|
            :Category                               : |:Category|
            :Category ls                            : |:Category-ls|
            :Category rm                            : |:Category-rm|
        7. Mappings.................................: |fontcatalog-mappings|
        8. ChangeLog................................: |fontcatalog-changes|
        9. To do....................................: |fontcatalog-todo|

==============================================================================
2. What is this plugin for?                               *fontcatalog-whatis*

        FontCatalog  is  a  way  to  organize  your  prefered  fonts attaching
        categories to each  selected font easily.  Since we  are talking about
        fonts, this plugin doesn't do anything on TTY. It is exclusive for use
        with GUI Vim version.

        What is a category?

        A category is just a name.  There  are several fonts that are great to
        work with  GUI Vim  when writing code  and others  that are  better to
        write documents, like TeX or Markdown.  There are fonts that have bold
        typefaces but others don't. Is not easy to remember which font is what
        when you have a good number of it.  So,  this plugin helps to remember
        what each font is better for.

==============================================================================
3. Installing                                            *fontcatalog-install*

        1. Using Pathogen (https://github.com/tpope/vim-pathogen).

        Create  a  directory  named  'fontcatalog'  in  you  'bundle'  folder.
        Navigate to that directory them clone this repo:
>
        git clone https://github.com/aantonello/vim-fontcatalog.git .
<
        2. Using vim-plug (https://github.com/junegunn/vim-plug).

        Add this in your '.vimrc' file:
>
        Plug 'https://github.com/aantonello/vim-fontcatalog.git'
<
        3. Vimball.       

        Download the file 'fontcatalog.vmb' in the 'install' folder and source
        it:
>
        vim fontcatalog.vmp
        :so %
<
        After the installation ends build the tags for documents help.
>
        :helptags ~/.vim/doc
<
==============================================================================
4. Categories                                         *fontcatalog-categories*

        A category is just a name. It can be used to bind properties to a font
        to help identify  what  its  is  best  for.  For example,  the Windows
        operating system can mimic the 'bold'  and 'italic' styles even when a
        font doesn't support  it.  The macOS operating system  cannot do this.
        You could use categories to list fonts that support only 'bold' style,
        or both 'bold' and 'italic' styles.

        To create  a category  you just add  a font  to it.  Suppose  you have
        selected the  "DeJaVu" font in your  GUI Vim.  To bin this  font the a
        'bold' category you can type the following command:
>
        :Font add bold
<
        To list all fonts bound to the 'bold' category you can type:
>
        :Font ls bold
<
        or
>
        :Category ls bold
<
        You can  check several categories at  once,  typing several categories
        names after the 'ls' option:
>
        :Font ls bold italic
<
        In the same  way,  you  can  bind  the  current  font  to more than one
        category in a single command:
>
        :Font add bold italic
<
==============================================================================
5. Options                                               *fontcatalog-options*

                                                        *'g:fc_CatalogFolder'*
        This  option  sets the  directory  where  categories  will  be stored.
        Categories  are simple files that  lists all  fonts bound  to it.  You
        should set this in your 'vimrc'  file because 'gvimrc' is loaded after
        the plugin it self.
>
        let g:fc_CatalogFolder = '$HOME/.fontcatalog'
<
        "$HOME/.fontcatalog" is the default.

        The plugin will create the directory if it doesn't exist.


                                                          *'g:fc_DefaultFont'*
        This is  optional.  A font to be  used when GUI  Vim starts.  A string
        with the font name and size, like used in the option |'guifont'|.  You
        don't need to scape spaces.  The script does this automatically.
>
        let g:fc_DefaultFont = 'Letter Gothic Std Medium:h12'
<
        This option must  be set before the plugin is  loaded,  so it can take
        effect when GUI starts.

        When there is no  default font defined the plugin will  try to use one
        from the previous session.  The last  used font,  if there is one,  it
        will be  selected.  Otherwise it will let  GUI Vim to  figure out what
        font to use.


                                                       *'g:fc_DontUseDefault'*
        Disable the plugin to select a font when GUI Vim starts.  As explained
        in |'g:fc_DefaultFont'|,  the plugin selects the last used font in the
        previous session.  This option disable this feature.  Also, the plugin
        will ignore the |'g:fc_DefaultFont'| option.
>
        let g:fc_DontUseDefault = 1
<


                                                      *'g:loaded_fontcatalog'*
        If you want to disable the plugin from loading,  just set this in your
        'vimrc' file.
>
        let g:loaded_fontcatalog = 1
<
        And restart GVim. The plugin will not be loaded.

==============================================================================
6. Commands                                             *fontcatalog-commands*

                                                                       *:Font*
:Font
        Show the current selected font name and the categories it is bound to.
        The output would be:
>
        guifont is "DeJaVu Sans Mono:h12" in bold, italic, regular
<

                                                                   *:Font-add*
:Font add {category} [category] [...]
        This command bind the current GUI font with one or more categories. At
        least one  category name  must be  provided.  If the  category doesn't
        exists it will be created.
>
        :Font add light bold
<

                                                                    *:Font-rm*
:Font rm [category] [...]
        Unbind the current font from one of more categories.  This command can
        also be  used to remove the  selected font from  the catalog,  when no
        category name is typed.
>
        :Font rm bold
<
        The above command unbind the font of 'bold' category.
>
        :Font rm
<
        The above  command ask your  confirmation before remove  the font from
        the  catalog.  This way,  the  font will  not be  listed in  any other
        command any more.

                                                                   *:Font-set*
:Font set {font-name}
         Selects a font to be used in GUI Vim. This is like typing the command
         `:set  guifont=DeJaVu\  Sans\  Mono:h12`  in  the  command line.  The
         advantage  of using  this command  is  that  it  provides completion.
         Typing <C-D>  or <TAB> after `:Font  set` will list all  fonts in the
         catalog.

                                                                    *:Font-ls*
:Font ls [category]
        Lists all fonts in the catalog. When [category] is provided, lists all
        fonts  bound  to  that category.  Each  font  is  listed  in  on line,
        preceeded by a number.  The command allows  the selection of a font by
        typing the number in front of it.
>
        :Font ls bold
<
        Would output:
>
        1: DeJaVu Sans Mono:h12 in bold, italic, regular
        2: Inconsolata:h14      in bold, regular
        Type the font number to set it (zero to cancel):
<

                                                                   *:Category*
:Category
        The ':Category' command alone provides  the same output as the |:Font|
        command alone.  Listing the current  selected font name and categories
        bound to it. The ':Category' command provides some options allowing to
        performe others operations.

                                                                *:Category-ls*
:Category ls [category]
        List all categories in the  catalog,  together with the fonts bound to
        it.  When [category] is provided,  only that category is listed.  More
        than one category can be provided.
>
        :Category ls bold italic
<
        Would list 'bold' and 'italic' categories with the fonts bound to it.

                                                                *:Category-rm*
:Category rm {category}
        Remove a category from the catalog.

==============================================================================
7. Mappings                                             *fontcatalog-mappings*

        There are no mappings defined in  the plugin.  You can create your own
        if you want to.  You can put  your mappings in the 'gvimrc' file since
        it is loaded  after  the  plugin  loads  and  the commands are already
        available.

==============================================================================
8. ChangeLog                                             *fontcatalog-changes*

March, 14 2023 (version: 2.0.0)
    1. Convertion to vim9script functions. Autoload functions were removed.
    2. The plugin was completely rewrote.

August 2, 2020 (version: 1.2.1)
    1. Fixed a bug in the |:FontRm| command not removing the selected font.
    2. Added the possibility to set linespace of a font using an specific
       category name.

December 30, 2018 (version: 1.2)
    autload/fontcatalog.vim
        * All functions are now in the autoload path. If the plugin is not
          used the functions should not be loaded.
    plugin/fontcatalog.vim
        * Now uses funcions in the autoload path. No function is defined in
          this file.
    doc/fontcatalog.doc
        * Documentation is up to date.

April 26, 2018 (version: 1.1)
    fontcatalog.vim
        * Removed all commands starting with 'FC'. Replaced by commands
          'Font' to be more expressive.
        * Removed some commands and added functionality on removed commands to
          existing commands.
    fontcatalog.doc
        * Updated documentation to reflect the changes in the plugin.

May 14, 2014 (version: 1.0.2)
    fontcatalog.vim
        * |:FCFont|, |:Font|: Now those commands shows the selected font
          specification when called without arguments.
        * |:FCCat|: Now this command accepts an argument allowing to get the
          categories of a font other than the selected one. It has the
          completion feature of listing all fonts in the catalog.
        * The selection of the startup font was moved to GUIEnter auto
          command.
    fontcatalog.txt
        * Documentation of |:FCRem| command updated.
        * Documentation of |:FCFont| and |:Font| commands updated.
        * Documentation of |:FCCat| command updated.

May 13, 2014:
        * fontcatalog.vim (version 1.0): First release.
        * fontcatalog.txt (version 1.0): First release.

==============================================================================
9. To do                                                    *fontcatalog-todo*

        1) Better font selection method. Maybe using quickfix window or a
        temporary buffer;
        2) 'linespacing' setting according to font selection.

==============================================================================
vim:tw=78:ts=4:sw=4:ft=help:
