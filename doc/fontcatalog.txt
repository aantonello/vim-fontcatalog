*fontcatalog.txt*            Font Catalog Plugin                  May 13, 2014
*fontcatalog.vim*                                                *fontcatalog*

Author: Alessandro Antonello <antonello.ale@gmail.com>

License:    This plugin is under GPLv3 license.  This basically means that you
            are free  to copy,  share,  distribute,  sell or change  it as you
            like. There are no warranties though.

==============================================================================
                                                           *fontcatalog-index*
1. Contents                                             *fontcatalog-contents*

        1. Contents.................................: |fontcatalog-contents|
        2. What is this plugin for?.................: |fontcatalog-whatis|
        3. Installing...............................: |fontcatalog-install|
        4. Categories...............................: |fontcatalog-categories|
        5. Options..................................: |fontcatalog-options|
        6. Commands.................................: |fontcatalog-commands|
            :FontAdd                                : |:FontAdd|
            :FontRm                                 : |:FontRm|
            :FontRmFont                             : |:FontRmFont|
            :FontRmCat                              : |:FontRmCat|
            :FontCategories                         : |:FontCategories|
            :Fonts                                  : |:Fonts|
            :Font                                   : |:Font|
        7. Mappings.................................: |fontcatalog-mappings|
        8. Functions................................: |fontcatalog-functions|
        9. ChangeLog................................: |fontcatalog-changes|
       10. Todo.....................................: |fontcatalog-todo|

==============================================================================
2. What is this plugin for?                               *fontcatalog-whatis*

        I made  this plugin for  my special needs.  I  like to use  GVim in my
        development sessions.  I usually work  with several direfent projects.
        Native C++  projects,  native iOS projects,  native  Android projects,
        hybrid mobile projects, etc... Since my job list is so ecletic, I like
        to present each development environment in a different font,  so I can
        distinguish each of then just by glinpse the GVim window.

        This plugin make it ease to  select a font from a internal catalog.  I
        prefer to use an internal catalog  becouse the windows to select fonts
        from system present a bunch of names that I don't use. Also it normaly
        requires a mouse what I don't like.

==============================================================================
3. Installing                                            *fontcatalog-install*

        1. Using Pathogen (https://github.com/tpope/vim-pathogen).

        Create  a  directory  named  'fontcatalog'  in  you  'bundle'  folder.
        Navigate to that directory them clone this repo:
>
        git clone https://github.com/aantonello/vim-fontcatalog.git .
<
        2. Using vim-plug (https://github.com/junegunn/vim-plug).

        Add this in your '.vimrc' file:
>
        Plug 'https://github.com/aantonello/vim-fontcatalog.git'
<
        3. Vimball.       

        Download the file 'fontcatalog.vmb' in the 'install' folder and source
        it:
>
        vim fontcatalog.vmp
        :so %
<
        After the installation ends build the tags for documents help.
>
        :helptags ~/.vim/doc
<
==============================================================================
4. Categories                                         *fontcatalog-categories*

        A category is just a name.  It can be used to add properties to a font
        for its selection. For example, the Windows operating system can mimic
        the 'bold'  and 'italic' styles even  when a font  doesn't support it.
        The OSX operating system cannot  do this.  You could use categories to
        list fonts that support only 'bold' style, or both 'bold' and 'italic'
        styles.

        To create  a category  you just add  a font  to it.  Suppose  you have
        selected a "Monaco"  font.  It  could  be  done  using the |'guifont'|
        option,  through the Font dialog or using the |:Font| command.  To add
        it in the 'bold' category you issue:
>
        :FontAdd bold
<
        In the command window.

        To list all fonts in the 'bold' category you can type:
>
        :Fonts bold
<
        You  can  see all  fonts  in more  than  one  category  by  adding the
        categories in the command above:
>
        :Fonts bold italic
<
        In the same  way,  you  can  add  the  current  font  to more than one
        category in the same command:
>
        :FontAdd bold italic
<
        There is an special category that can be used to set the space between
        text lines of a font. There are fonts with no space between the lines.
        Say,  for  example,  'Lekton Nerd  Font Complete  Regular'.  Using the
        category "spacex1"  you instruct the  plugin to set  the |'linespace'|
        option to  1.  If you add the  category "space_2" the  plugin will set
        |'linespace'| to  2.  In fact,  the category  name need to  start with
        "space"    and    end    with    a    number.    You    could    write
        "space_to_add_between_lines_2" and it will work just fine.

==============================================================================
5. Options                                               *fontcatalog-options*

                                                        *'g:fc_CatalogFolder'*
        This  option  sets the  directory  where  categories  will  be stored.
        Categories  are really files that  lists all  fonts added  to it.  You
        should set this in your 'vimrc'  file because 'gvimrc' is loaded after
        the plugin it self.
>
        let g:fc_CatalogFolder = <default: ~/.vim/fontcatalog>
<
        The plugin will create the directory if it doesn't exist.


                                                          *'g:fc_DefaultFont'*
        This is  optional.  A font to be  used when GUI  Vim starts.  A string
        with the font name and size, like used in the option |'guifont'|.  You
        don't need to scape spaces.  The script does this automatically.
>
        let g:fc_DefaultFont = 'Letter Gothic Std Medium:h12'
<
        This also must  be set in 'vimrc' file.  'gvimrc'  will load after the
        plugin and it will not find this variable.

        When there is  no default font the  plugin will try to use  one from a
        previous session.  The  last  used  font,  if  there  is one,  will be
        selected.  Otherwise it  will let GUI Vim  to figure out  what font to
        use.


                                                       *'g:fc_DontUseDefault'*
        Disalow the plugin  to load the default font.  The  set defined in the
        |'g:fc_DefaultFont'| or from a previous sessions.
>
        let g:fc_DontUseDefault = 1
<


                                                      *'g:loaded_fontcatalog'*
        If you want to  disable the plugin from loading just  set this in your
        'vimrc' file.
>
        let g:loaded_fontcatalog = 1
<
        And restart GVim. The plugin will not be loaded.

==============================================================================
6. Commands                                             *fontcatalog-commands*

                                                                    *:FontAdd*
:FontAdd {category} [category] [...]
        Adds the current Font in one or more categories. You can use <Tab> for
        command  line completion  or <CTRL-D>  to  see  a  list  of categories
        already created.  See  |c_CTRL-D|.  If the category  doesn't exists it
        will be created. You can add the Font in more than one category in the
        same command.
>
        :FontAdd light bold
<

                                                                     *:FontRm*
:FontRm [category] [...]
        Removes the  current Font  from one or  more categories.  You  can use
        <Tab>  for command  line completion  or  <CTRL-D>  to  see  a  list of
        available categories.  You can  remove  the  Font  from  more than one
        category in the  same command.  If no category  name is provided,  the
        Font will be removed from all categories.
>
        :FontRm light bold
<
                                                                 *:FontRmFont*
:FontRmFont {Font}
        Removes the  specified Font from  the catalog.  You can  use <Tab> for
        command line completion or <CTRL-D> to see a list of fonts.
>
        :FontRmFont Consolas:h12
<

                                                                   *:FontRmCat*
:FontRmCat {category}
        Will remove a category.  You can use <Tab> for command line completion
        or  <CTRL-D> for  a list  of categories.  The  deletion will  ask your
        confirmation before erasing the file from the catalog directory.  Only
        one category can be deleted at a time.
>
        :FontRmCat light
<

                                                             *:FontCategories*
:FontCategories [categories]
        Shows a simple  list with all categories found in  the catalog and the
        number of Fonts on each category.  You  can use <Tab> for command line
        completion or <CTRL-D> for a  list of categories.  When no argument is
        passed, all categories are listed.
>
        :FontCategories
        bold        > With 2 fonts
        regular     > With "Consolas:h12" only
        light       > With "Letter Gothic Std Medium:h12" only
<

                                                                      *:Fonts*
:Fonts [category] [...]
        List all Fonts that are within a category or categories.  The argument
        is  one or  more category  name.  Completion applies.  When  only one
        category is  typed all  Fonts in that  category will  be listed.  When
        more than  one category is typed  Fonts only common  to all categories
        are listed.
>
        :Fonts bold
        Consolas:h12                 in: bold, italic, regular
        Letter Gothic Std Medium:h12 in: bold, light
<
        If you pass '*' (no quotes)  as the single category name,  the command
        shows the Font List  Dialog so you can select a  Font available in the
        system.  If you don't pass any category  name nor '*' the command will
        list all Fonts added to the catalog.

                                                                       *:Font*
:Font [Font]
        Select a font to  be  used  in  GUI  Vim.  Its  result  is the same as
        setting the option |'guifont'|.  Its argument is a Font specification,
        as added  to the catalog.  Completion  applies.  Without arguments the
        command will show,  in the command bar,  the current Font selected and
        its categories.
>
        :Font Consolas:h12      " Is the same as...
        :set guifont=Consolas:h12

        :Font
        -> Font "Consolas:h12"
                bold, italic, regular
<

==============================================================================
7. Mappings                                             *fontcatalog-mappings*

        There is no  mappings defined in the plugin.  You  can create your own
        if you want to.  You can put  your mappings in the 'gvimrc' file since
        it is loaded  after  the  plugin  loads  and  the commands are already
        available.

==============================================================================
8. Functions                                            *fontcatalog-functions*

        The plugin  has all functionality defined  in autoload functions.  You
        can see the file  'autoload/fontcatalog.vim' for help.  Most notorious
        is the |fontcatalog#fontCategories()| function.


                                                *fontcatalog#fontCategories()*
fontcatalog#fontCategories({font})
        The result is  a |List| with all categories  a font has.  The optional
        argument  {font}  is  the  font  specification  as  configured  in the
        catalog.  Note that the specification must be set as a string and must
        have the size defined. If not passed the current front will be used.

==============================================================================
9. ChangeLog                                             *fontcatalog-changes*

August 2, 2020 (version: 1.2.1)
    1. Fixed a bug in the |:FontRm| command not removing the selected font.
    2. Added the possibility to set linespace of a font using an specific
       category name.

December 30, 2018 (version: 1.2)
    autload/fontcatalog.vim
        * All functions are now in the autoload path. If the plugin is not
          used the functions should not be loaded.
    plugin/fontcatalog.vim
        * Now uses funcions in the autoload path. No function is defined in
          this file.
    doc/fontcatalog.doc
        * Documentation is up to date.

April 26, 2018 (version: 1.1)
    fontcatalog.vim
        * Removed all commands starting with 'FC'. Replaced by commands
          'Font' to be more expressive.
        * Removed some commands and added functionality on removed commands to
          existing commands.
    fontcatalog.doc
        * Updated documentation to reflect the changes in the plugin.

May 14, 2014 (version: 1.0.2)
    fontcatalog.vim
        * |:FCFont|, |:Font|: Now those commands shows the selected font
          specification when called without arguments.
        * |:FCCat|: Now this command accepts an argument allowing to get the
          categories of a font other than the selected one. It has the
          completion feature of listing all fonts in the catalog.
        * The selection of the startup font was moved to GUIEnter auto
          command.
    fontcatalog.txt
        * Documentation of |:FCRem| command updated.
        * Documentation of |:FCFont| and |:Font| commands updated.
        * Documentation of |:FCCat| command updated.

May 13, 2014:
        * fontcatalog.vim (version 1.0): First release.
        * fontcatalog.txt (version 1.0): First release.

==============================================================================
10. Todo                                                    *fontcatalog-todo*

        1)  Better  font selection  method.  Maybe  using  quickfix  window or
        something like that.

==============================================================================
vim:tw=78:ts=4:sw=4:ft=help:
