*fontcatalog.txt*            Font Catalog Plugin                  May 13, 2014
*fontcatalog.vim*                                                *fontcatalog*

Author: Alessandro Antonello <antonello.ale@gmail.com>

License:    This plugin is under GPLv3 license.  This basically means that you
            are free  to copy,  share,  distribute,  sell or change  it as you
            like.  There are no warranties though.

==============================================================================
                                                           *fontcatalog-index*
1. Contents                                             *fontcatalog-contents*

        1. Contents..................................: |fontcatalog-contents|
        2. What is this plugin for?..................: |fontcatalog-whatis|
        3. Installing................................: |fontcatalog-install|
        4. Options...................................: |fontcatalog-options|
        5. Commands..................................: |fontcatalog-commands|
            :FontAdd                                 : |:FontAdd|
            :FontRm                                  : |:FontRm|
            :FontRmFont                              : |:FontRmFont|
            :FontRmCat                               : |:FontRmCat|
            :FontCategories                          : |:FontCategories|
            :Fonts                                   : |:Fonts|
            :Font                                    : |:Font|
        6. Mappings..................................: |fontcatalog-mappings|
        7. Functions.................................: |fontcatalog-functions|
        8. ChangeLog.................................: |fontcatalog-changes|
        9. Todo......................................: |fontcatalog-todo|

==============================================================================
2. What is this plugin for?                               *fontcatalog-whatis*

        Some  people like  to use  Vim  in  a  terminal  window. Simple, still
        efficient.  Some people  use Vim in  the GUI.  Most,  maybe,  choose a
        single font and stick with it for a very long time.  Others, including
        my self,  like to  change font from time to  time,  or from session to
        session. For this kind of people, open the font list dialog every time
        he/she needs to choose another font may be boring or  cumbersome.  For
        this kind of people this plugin may be useful.

        This plugin enables you to choose a font from the font list dialog and
        set a  category for it.  A  category is simply  a name like  'bold' or
        'italic' with will be used to list fonts alike.  Maybe an example will
        clarify things better.

        I like the "Consolas" font. So I can load it using the font list dialog:
>
        :Fonts *
<
        Upon selected GUI Vim will start using it. It looks great on Windows
        but on Mac OS X it is a little heavy when used with dark backgrounds.
        So I put it in a category:
>
        :FontAdd regular bold italic heavy-on-dark
<
        Well,  that was  four categories actualy:  'regular' because  it has a
        regular size.  'bold' because it has a bold version.  MacVim is unable
        to fake  bold and italic styles like Windows,  so it's useful  to have
        categories that tell if a font  has a style or not.  'italic' was also
        created for  that  matter.  Finally  'heavy-on-dark'  because  it is a
        little heavy in dark backgrounds.

        The font 'Letter  Gothic Std Medium' has a  thin shape.  Good for dark
        backgrounds.  It also has  'bold' and 'italic' variants.  So  I put it
        on these categories:
>
        :FontAdd regular bold italic ok-on-dark
<
        Meaning this font is Ok on dark backgrounds. After I add several fonts
        to my catalog I can list and set then in a more easily fashion:
>
        :Fonts ok-on-dark
<
        Will list all fonts that I  put in that category.  Lets pretend that I
        want to use 'Letter Gothic Std Medium'.  I can type:
>
        :Font let<Tab>
<
        The name will  be completed for me.  I  can change the size  if I want
        to.  Pressing <Enter>  the chosen font  will be used  by GVim throught
        the command 'set guifont=<Font>'.  Spaces in the font name are scaped,
        if needed.

==============================================================================
3. Installing                                            *fontcatalog-install*

        Installation   is   very   simple.   There   are   just   two   files:
        'fontcatalog.vim' and 'fontcatalog.txt'.  Put 'fontcatalog.vim' in the
        plugins directory  and 'fontcatalog.txt'  in the  doc directory.  Open
        Vim and type:
>
        :helptags ~/.vim/doc
<
        Also,  a VimBall  file is provided.  You  can source 'fontcatalog.vmb'
        and files will be magically installed. Open that file on Vim and type:
>
        :so %
<
        And that is it.

        Any plugin manager can be used.  If you like Pathogen,  as myself, you
        can use  it.  Clone the  repository at your  bundle directory  and the
        pathogen      plugin       will      do       the      rest.       See
        'https://github.com/tpope/pathogen.vim' for more information:
>
        cd ~/.vim/bundle
        git clone https://github.com/aantonello/vim-fontcatalog
<
==============================================================================
4. Options                                               *fontcatalog-options*

                                                        *'g:fc_CatalogFolder'*
        This  option  sets the  directory  where  categories  will  be stored.
        Categories  are really files that  lists all  fonts added  to it.  You
        should set this in your 'vimrc'  file because 'gvimrc' is loaded after
        the plugin it self.
>
        let g:fc_CatalogFolder = <default: ~/.vim/fontcatalog>
<
        The plugin will create the directory if it doesn't exist.


                                                          *'g:fc_DefaultFont'*
        This is  optional.  A font to be  used when GUI  Vim starts.  A string
        with the font name and size, like used in the option |'guifont'|.  You
        don't need to scape spaces.  The script does this automatically.
>
        let g:fc_DefaultFont = 'Letter Gothic Std Medium:h12'
<
        This also must  be set in 'vimrc' file.  'gvimrc'  will load after the
        plugin and it will not find this variable.

        When there is  no default font the  plugin will try to use  one from a
        previous session.  The  last  used  font,  if  there  is one,  will be
        selected.  Otherwise it  will let GUI Vim  to figure out  what font to
        use.


                                                      *'g:loaded_fontcatalog'*
        If you want to  disable the plugin from loading just  set this in your
        'vimrc' file.
>
        let g:loaded_fontcatalog = 1
<
        And restart GVim. The plugin will not be loaded.

==============================================================================
5. Commands                                             *fontcatalog-commands*

                                                                    *:FontAdd*
:FontAdd {category} [category] [...]
        Adds the current Font in one or more categories. You can use <Tab> for
        command  line completion  or <CTRL-D>  to  see  a  list  of categories
        already created.  See  |c_CTRL-D|.  If the category  doesn't exists it
        will be created. You can add the Font in more than one category in the
        same command.
>
        :FontAdd light bold
<

                                                                     *:FontRm*
:FontRm [category] [...]
        Removes the  current Font  from one or  more categories.  You  can use
        <Tab>  for command  line completion  or  <CTRL-D>  to  see  a  list of
        available categories.  You can  remove  the  Font  from  more than one
        category in the  same command.  If no category  name is provided,  the
        Font will be removed from all categories.
>
        :FontRm light bold
<
                                                                 *:FontRmFont*
:FontRmFont {Font}
        Removes the  specified Font from  the catalog.  You can  use <Tab> for
        command line completion or <CTRL-D> to see a list of fonts.
>
        :FontRmFont Consolas:h12
<

                                                                   *:FontRmCat*
:FontRmCat {category}
        Will remove a category.  You can use <Tab> for command line completion
        or  <CTRL-D> for  a list  of categories.  The  deletion will  ask your
        confirmation before erasing the file from the catalog directory.  Only
        one category can be deleted at a time.
>
        :FontRmCat light
<

                                                             *:FontCategories*
:FontCategories [categories]
        Shows a simple  list with all categories found in  the catalog and the
        number of Fonts on each category.  You  can use <Tab> for command line
        completion or <CTRL-D> for a  list of categories.  When no argument is
        passed, all categories are listed.
>
        :FontCategories
        bold        > With 2 fonts
        regular     > With "Consolas:h12" only
        light       > With "Letter Gothic Std Medium:h12" only
<

                                                                      *:Fonts*
:Fonts [category] [...]
        List all Fonts that are within a category or categories.  The argument
        is  one or  more category  name.  Completion applies.  When  only one
        category is  typed all  Fonts in that  category will  be listed.  When
        more than  one category is typed  Fonts only common  to all categories
        are listed.
>
        :Fonts bold
        Consolas:h12                 in: bold, italic, regular
        Letter Gothic Std Medium:h12 in: bold, light
<
        If you pass '*' (no quotes)  as the single category name,  the command
        shows the Font List  Dialog so you can select a  Font available in the
        system.  If you don't pass any category  name nor '*' the command will
        list all Fonts added to the catalog.

                                                                       *:Font*
:Font [Font]
        Select a font to  be  used  in  GUI  Vim.  Its  result  is the same as
        setting the option |'guifont'|.  Its argument is a Font specification,
        as added  to the catalog.  Completion  applies.  Without arguments the
        command will show,  in the command bar,  the current Font selected and
        its categories.
>
        :Font Consolas:h12      " Is the same as...
        :set guifont=Consolas:h12

        :Font
        -> Font "Consolas:h12"
                bold, italic, regular
<

==============================================================================
6. Mappings                                             *fontcatalog-mappings*

        There is no  mappings defined in the plugin.  You  can create your own
        if you want to.  You can put  your mappings in the 'gvimrc' file since
        it is loaded  after  the  plugin  loads  and  the commands are already
        available.

==============================================================================
7. Functions                                            *fontcatalog-funcions*

        The plugin  has all functionality defined  in autoload functions.  You
        can see the file  'autoload/fontcatalog.vim' for help.  Most notorious
        is the |fontcatalog#fontCategories()| function.

                                                *fontcatalog#fontCategories()*
fontcatalog#fontCategories({font})
        The result is  a |List| with all categories  a font has.  The optional
        argument  {font}  is  the  font  specification  as  configured  in the
        catalog.  Note that the specification must be set as a string and must
        have the size defined. If not passed the current front will be used.

==============================================================================
8. ChangeLog                                             *fontcatalog-changes*

December 30, 2018 (version: 1.2)
    autload/fontcatalog.vim
        * All functions are now in the autoload path. If the plugin is not
          used the functions should not be loaded.
    plugin/fontcatalog.vim
        * Now uses funcions in the autoload path. No function is defined in
          this file.
    doc/fontcatalog.doc
        * Documentation is up to date.

April 26, 2018 (version: 1.1)
    fontcatalog.vim
        * Removed all commands starting with 'FC'. Replaced by commands
          'Font' to be more expressive.
        * Removed some commands and added functionality on removed commands to
          existing commands.
    fontcatalog.doc
        * Updated documentation to reflect the changes in the plugin.

May 14, 2014 (version: 1.0.2)
    fontcatalog.vim
        * |:FCFont|, |:Font|: Now those commands shows the selected font
          specification when called without arguments.
        * |:FCCat|: Now this command accepts an argument allowing to get the
          categories of a font other than the selected one. It has the
          completion feature of listing all fonts in the catalog.
        * The selection of the startup font was moved to GUIEnter auto
          command.
    fontcatalog.txt
        * Documentation of |:FCRem| command updated.
        * Documentation of |:FCFont| and |:Font| commands updated.
        * Documentation of |:FCCat| command updated.

May 13, 2014:
        * fontcatalog.vim (version 1.0): First release.
        * fontcatalog.txt (version 1.0): First release.

==============================================================================
9. Todo                                                     *fontcatalog-todo*

        1)  Better  font selection  method.  Maybe  using  quickfix  window or
        something like that.
        2)  Script functions  could be  passed to  'autoload' directory.  Will
        speed up Vim loading time.

==============================================================================
vim:tw=78:ts=4:sw=4:ft=help:
